

max and min in array
#include<stdio.h>
int main()
{
    int a[10],n,i,min,max;
    printf("enter the size of array");
    scanf("%d",&n);
    printf("enter the elements into an array");
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    //min element
    min=a[0];
    for(i=0;i<n;i++)
    {
        if(a[i]<min)
        {
            min=a[i];
        }
    }
    // max element 
    max=a[0];
    for(i=0;i<n;i++)
    {
        if(a[i]>max)
        {
            max=a[i];
        }
    }
    printf("the min value is %d",min);
    printf(" \n the max value is %d",max);
    return 0;
}


linear search
#include <stdio.h>
int main()
{
    int a[10], i, item,n;
    printf("\nEnter number of elements of an array:\n");
    scanf("%d",&n);
    printf("\nEnter elements: \n");
    for (i=0; i<n; i++)
        scanf("%d", &a[i]);
    printf("\nEnter item to search: ");
    scanf("%d", &item);
    for (i=0; i<=9; i++)
        if (item == a[i])
        {
            printf("\nItem found at location %d", i+1);
            break;
        }
    if (i > 9)
        printf("\nItem does not exist.");
    return 0;
}


sorting
#include <stdio.h>
int main(){
    int min=0,max=0,temp=0,arr[5];
    printf("Enter arr elements with spaces : ");
    for (int i=0;i<5;i++){
        scanf("%d",&arr[i]);
    }
    // Bubble sort
    for (int i=0;i<5;i++){  // loop required to run the inner loop 5 times
        for (int j=0;j<5-i;j++){
            if (arr[j]>arr[j-1]) {  // swapping the elements by comparing
                temp=arr[j];
                arr[j]=arr[j-1];
                arr[j-1]=temp;
            }
        }
    }
    // printing the sorted array
    printf("\nArray after sorting : [ ");
    for (int i=0;i<5;i++){
        printf("%d ",arr[i]);
    }
    printf(" ]");
    max=arr[0];
    min=arr[4];
    printf("\nMax of the inputs is : %d\nMin of the inputs is : %d",max,min);
}


2d array largest in row
#include<stdio.h>
int main()
{
    int m,n;                 
    printf("Enter the number of rows and column: \n");
    scanf("%d %d",&m,&n);  
    int arr[10][10];        
    printf("\nEnter the elements of the matrix: \n");
    for(int i=0;i<m;i++)    
    {
        for(int j=0;j<n;j++)
        {
            scanf("%d",&arr[i][j]);
        }
    }
    printf("\nThe elements in the matrix are: \n");
    for(int i=0;i<m;i++)    
    {
        for(int j=0;j<n;j++)
        {
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
    int i = 0, j;
    int max = 0;
    int res[m];
    while (i < m)   
    {
       for ( j = 0; j < n; j++)
       {
           if (arr[i][j] > max)
           {
              max = arr[i][j];
           }
        }
        res[i] = max;
        max = 0;
        i++;
    }
    for(int i = 0; i < n; i++)      
    {
       printf("Largest element in row %d is %d \n", i, res[i]);
    }
return 0;
}


transpose of matrix
#include <stdio.h>
//Transpose of a matrix
int main()
{
    int row,col,i,j,arr1[10][10],arr2[10][10];
    printf ("Enter the size of matrix : "); scanf("%d %d",&row,&col);
    for(i=0;i<row;i++)
    {
        printf("Enter row %d (%d elements) : ",i+1,col);
        for (j=0;j<col;j++)
        {
            scanf("%d",&arr1[i][j]); // storing 
        }
    }
    // values are stored.
    // tronspose of matrix
    for (i=0;i<row;i++)
    {
        for (j=0;j<col;j++)
        {
            arr2[j][i]=arr1[i][j];
        }
    }
    // printing arr arr2
    printf("\nThe transpose matrix is : \n");
    for (i=0;i<row;i++)
    {
        for (j=0;j<col;j++)
        {
            printf("%d ",arr2[i][j]);
        }
        printf("\n");
    }
}



product of matrix
#include <stdio.h>
// To find product of two matrices
int main()
{
    int a[10][10],b[10][10],c[10][10],row,col,i,j;
    printf("Enter order of matrix : "); scanf("%d %d",&row,&col);
    printf("Enter elements of matrix a.\n");
    for (i=0;i<row;i++)
    {
        printf("Enter row : ");
        for (j=0;j<col;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Enter the elements of matrix b.\n");
    for (i=0;i<row;i++)
    {
        printf("Enter row : ");
        for (j=0;j<col;j++)
        {
            scanf("%d",&b[i][j]);
        }
    } 
    for (i=0;i<row;i++)
    {
        for (j=0;j<col;j++)
        {
            c[i][j]=0;
            for (int k=0;k<col;k++)
            {
                c[i][j]=c[i][j]+a[i][k]*b[k][j];
            }
        }
    }
    printf("result : \n");
    for (i=0;i<row;i++)
    {
        for (j=0;j<col;j++)
        {
            printf("%2d",c[i][j]);
        }
        printf("\n");
    }
}


vowels consonents in array
#include <stdio.h>
#include <string.h>
#define MAX_SIZE 100 // Maximum string size
int main()
{
    char str[MAX_SIZE];
    int i, len, vowel, consonant;

    //Input string from user 
    printf("Enter any string: ");
    gets(str);

    vowel = 0;
    consonant = 0;
    len = strlen(str);

    for(i=0; i<len; i++)
    {
        if((str[i]>='a' && str[i]<='z') || (str[i]>='A' && str[i]<='Z'))
        {
            
             // If the current character(str[i]) is a vowel
             
            if(str[i] =='a' || str[i]=='e' || str[i]=='i' || str[i]=='o' || str[i]=='u' || 
               str[i] =='A' || str[i]=='E' || str[i]=='I' || str[i]=='O' || str[i]=='U'  )
                vowel++;
            else
                consonant++;
        }
    }
printf("Total number of vowel = %d\n", vowel);
printf("Total number of consonant = %d\n", consonant);
return 0;
}


reversing of string
#include<stdio.h>
int length(char* string) {
int count = 0;
while (string[count] != '\0') {
     ++count;
	}
	return count;

}

// function to reverse string
void reverse(char* string) {
char temp;
	int i, j, n;
	n = length(string);
// swapping string[i] and string[j] until i<j
	for (i = 0, j = n - 1; i < j; ++i, --j) {
		temp = string[j];
		string[j] = string[i];
		string[i] = temp;
	}

}

int main()
{
	char string[100];
	printf("Enter a String: ");
	scanf("%s", string);

	printf("\nString Before Reverse: %s", string);
	reverse(string);
	printf("\n\nString After Reverse: %s", string);
}


dictionary order
#include <stdio.h>
#include <string.h>

int main() {
   char str[5][50], temp[50];
   printf("Enter 5 words: ");

   // Getting strings input
   for (int i = 0; i < 5; ++i) {
      fgets(str[i], sizeof(str[i]), stdin);
   }

   // storing strings in the dictionary  order
   for (int i = 0; i < 5; ++i) {
      for (int j = i + 1; j < 5; ++j) {

         // swapping strings if they are not in the dictionary  order
         if (strcmp(str[i], str[j]) > 0) {
            strcpy(temp, str[i]);
            strcpy(str[i], str[j]);
            strcpy(str[j], temp);
         }
      }
   }

   printf("\nIn the disctionary order: \n");
   for (int i = 0; i < 5; ++i) {
      fputs(str[i], stdout);
   }
   return 0;
}


addition of two matrics
#include <stdio.h>
 
int main()
{
   int m, n, c, d, first[10][10], second[10][10], sum[10][10];
 
   printf("Enter the number of rows and columns of matrix\n");
   scanf("%d%d", &m, &n);
   printf("Enter the elements of first matrix\n");
 
   for (c = 0; c < m; c++)
      for (d = 0; d < n; d++)
         scanf("%d", &first[c][d]);
 
   printf("Enter the elements of second matrix\n");
 
   for (c = 0; c < m; c++)
      for (d = 0 ; d < n; d++)
         scanf("%d", &second[c][d]);
   
   printf("Sum of entered matrices:-\n");
   
   for (c = 0; c < m; c++) {
      for (d = 0 ; d < n; d++) {
         sum[c][d] = first[c][d] + second[c][d];
         printf("%d\t", sum[c][d]);
      }
      printf("\n");
   }
 
   return 0;
}



largest and smallest
#include<stdio.h>
 
int main()
{
int a[50],i,n,large,small;
printf("How many elements:");
scanf("%d",&n);
printf("Enter the Array:");
 
for(i=0;i<n;++i)
scanf("%d",&a[i]);
large=small=a[0];
for(i=1;i<n;++i)
{
if(a[i]>large)
large=a[i];
if(a[i]<small)
small=a[i];
}
printf("The largest element is %d",large);
printf("\nThe smallest element is %d",small);
 
return 0;
}



alphabets , digits, special chearacter
#include <stdio.h>
#define MAX_SIZE 100
int main()
{
    char str[MAX_SIZE];
    int alphabets, digits, others, i;

    alphabets = digits = others = i = 0;
printf("Enter any string : ");
    gets(str);
//Check each character of string for alphabet, digit or special character
      while(str[i]!='\0')
    {
        if((str[i]>='a' && str[i]<='z') || (str[i]>='A' && str[i]<='Z'))
        {
            alphabets++;
        }
        else if(str[i]>='0' && str[i]<='9')
        {
            digits++;
        }
        else
        {
            others++;
        }

        i++;
    }
    printf("Alphabets = %d\n", alphabets);
    printf("Digits = %d\n", digits);
    printf("Special characters = %d", others);
return 0;
}









